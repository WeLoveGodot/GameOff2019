on:
  push:
    tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    name: build game
    steps:
    - uses: actions/checkout@v1
    # - name: Setup Docker
    #   uses: aBARICHELLO/godot-ci@v3.1.1
    - name: Setup Godot
      run: |
        wget https://downloads.tuxfamily.org/godotengine/3.1.1/Godot_v3.1.1-stable_linux_headless.64.zip
        mkdir ~/.cache
        mkdir -p ~/.config/godot
        unzip Godot_v3.1.1-stable_linux_headless.64.zip
        mv Godot_v3.1.1-stable_linux_headless.64 godot_dir
    - name: Setup Godot Template
      run: |
        wget https://downloads.tuxfamily.org/godotengine/3.1.1/Godot_v3.1.1-stable_export_templates.tpz
        unzip Godot_v3.1.1-stable_export_templates.tpz
        mkdir -p ~/.local/share/godot/templates/3.1.1.stable
        mv templates/* ~/.local/share/godot/templates/3.1.1.stable
        rm -f Godot_v3.1.1-stable_export_templates.tpz
    - name: Build Game
      run: |
        # where i am
        pwd
        # tell me
        ls
        # try ls godot_dir
        ls godot_dir
        # Export for linux
        mkdir -p ./build/linux
        ./godot_dir/godot --export Linux/X11 ./build/linux/dark-forest

        # Export for Windows
        mkdir -p ./build/windows
        ./godot_dir/godot --export "Windows Desktop" ./build/windows/dark-forest.exe

        # Export for OSX
        mkdir -p ./builds/mac
        ./godot_dir/godot --export "Mac OSX" ./build/mac/dark-forest
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false