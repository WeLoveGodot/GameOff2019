on:
  push:
    tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    name: build game
    steps:
    - uses: actions/checkout@v1
    # - name: Setup Docker
    #   uses: aBARICHELLO/godot-ci@v3.1.1
    - name: Setup Godot
      run: |
        wget -q https://downloads.tuxfamily.org/godotengine/3.1.1/Godot_v3.1.1-stable_linux_headless.64.zip
        mkdir $HOME/.cache
        mkdir -p $HOME/.config/godot
        unzip Godot_v3.1.1-stable_linux_headless.64.zip
        mv Godot_v3.1.1-stable_linux_headless.64 $HOME/godot
        chmod +x $HOME/godot
    - name: Setup Godot Template
      run: |
        wget -q https://downloads.tuxfamily.org/godotengine/3.1.1/Godot_v3.1.1-stable_export_templates.tpz
        unzip Godot_v3.1.1-stable_export_templates.tpz
        mkdir -p $HOME/.local/share/godot/templates/3.1.1.stable
        mv templates/* $HOME/.local/share/godot/templates/3.1.1.stable
        rm -f Godot_v3.1.1-stable_export_templates.tpz
    - name: Build Game
      run: |
        # debug
        # where i am
        echo "==> pwd"
        pwd
        # home
        echo "==> home"
        echo $HOME
        # tell me
        echo "==> start build"

        # Export for Windows
        echo "==> building windows 64"
        mkdir -p win64
        $HOME/godot --export "win64" project.godot "win64/dark-forest.exe"

        echo "==> build windows 64 ok"
        zip -r win64 ./win64

        echo "==> building windows 32"
        mkdir -p win32
        $HOME/godot --export "win32" project.godot "win32/dark-forest.exe"

        echo "==> build windows 32 ok"
        zip -r win32 ./win32

        # Export for linux
        echo "==> building linux 64"
        mkdir -p linux64
        $HOME/godot --export "linux64" project.godot "linux64/dark-forest"
        echo "==> build linux 64 ok"
        zip -r linux64 linux64

        echo "==> building linux 32"
        mkdir -p linux32
        $HOME/godot --export "linux32" project.godot "linux32/dark-forest"
        echo "==> build linux 32 ok"
        zip -r linux32 linux32


        # Export for OSX
        echo "==> building mac"
        mkdir -p mac
        $HOME/godot --export "mac" project.godot "mac/dark-forest"
        echo "==> build mac ok"
        ls mac
        zip -r mac mac

        echo "==> building finish"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Windows 64
      id: upload-release-asset-win-64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./win64.zip
        asset_name: win64.zip
        asset_content_type: application/zip
    - name: Upload Windows 32
      id: upload-release-asset-win-32
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./win32.zip
        asset_name: win32.zip
        asset_content_type: application/zip

    - name: Upload Linux 64
      id: upload-release-asset-linux-64
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./linux64.zip
        asset_name: linux64.zip
        asset_content_type: application/zip
    - name: Upload Linux 32
      id: upload-release-asset-linux-32
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./linux32.zip
        asset_name: linux32.zip
        asset_content_type: application/zip

    - name: Upload Mac
      id: upload-release-asset-mac
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./mac.zip
        asset_name: mac.zip
        asset_content_type: application/zip